<?php
/*Inıtialize the session if not already initialized,
initialize the current captcha text for the session,
and seed the RNG.*/
if (session_id()==null) session_start();
$_SESSION['currentCaptcha'] = "";
srand();

//Total number of characters to be generated.
$GLOBALS['charCount'] = 5; 

//Default list of alphanumeric characters.
$characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';

//Create a blank image according to captcha length.
$captcha = initPNG();
//Set the font. The font type is .ttf since we are using imagettftext().
$font = "fonts/timesbd.ttf";

//Set the char position (caret, if you will) to start.
$charPosition = 0;

//Generate letters and concatenate them together until
//the set limit is reached.
while ($charPosition<=$GLOBALS['charCount']){
    appendCharJPG($charPosition);
    $charPosition++;
}

//Output the image directly to the browser, and then destroy it.
header('Content-Type: image/png');
imagepng($captcha,null,0);
imagedestroy($captcha);

function initPNG(){
    //Create a blank palette, using the character count as the width.
    return imagecreatetruecolor(60*$GLOBALS['charCount'],100);
}

function generateChar(){
    
    //Initialize RGB variables.
    $rgbValue = getRGBValue();
    $red = $rgbValue[0];
    $green = $rgbValue[1];
    $blue = $rgbValue[2];
    //Set the letter to be printed.
    //This is done before the printing so that
    //the letter in question can be stored and registered
    //for the session.
    $character = $GLOBALS['characters'][rand(0,61)];
    //Create a palette for the letter.
    $letterPNG = imagecreatetruecolor(60,100);
    //Make the background white.
    imagefilledrectangle($letterPNG,0,0,50,100,imagecolorallocate($letterPNG,255,255,255));
    //Set the color for the letter.
    $color = imagecolorallocate($letterPNG,$red,$green,$blue);
    //Print out a (pseudo)random letter using the global charset and the randomly generated color.
    /* As of its current standing, the letters
    will have varying angles and colors.*/
    //Use imagestring() if you can't use TrueType Fonts.
    imagettftext($letterPNG,28,rand(-30,30),15,rand(50,65),$color,$GLOBALS['font'],$character);
    //Concatenate the letter to the session variable for later validation.
    $_SESSION['currentCaptcha'] .= $character;
    return $letterPNG;
}


function appendCharJPG(int $charOrder){
    //Normalize the character position within limits.
    if ($charOrder<0) $charOrder = 0;
    else if ($charOrder>$GLOBALS['charCount']) $charOrder = $GLOBALS['charCount'];
    //Add a letter generated by generateChar() to the image,
    //and position it according to its order and 
    //orientation (which is LTR in this case).    
    imagecopymerge($GLOBALS['captcha'],generateChar(),50*$charOrder,0,0,0,50,100,100);
}

 function getRGBValue(){
    //Return a random RGB color.
    return array(rand(0,225),rand(0,225),rand(0,225));
 }


?>